[user]
	name = Saimon Moore
	email = saimonmoore@gmail.com
[core]
	excludesfile = /Users/saimon/.gitignore
	autocrlf = false
  editor = vim
[color]
	diff = auto
	status = auto
	branch = auto
  interactive = auto
[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green
[color "diff"]
        meta = yellow bold
        frag = magenta bold
        old = red bold
        new = green bold
[color "status"]
        added = yellow
        changed = green
        untracked = cyan

[alias]
  l  = log
  ld = log --oneline --decorate
  sh = show
	st = status
  sts = status -sb
  ci = commit -v
	co = checkout
	br = branch
  df  = diff
  dfc = diff --cached
  cp = cherry-pick
  cur = "rev-parse --abbrev-ref HEAD"
  gh-pullr = "!f() { git cur ; }; google-chrome https://github.com/teambox/Teambox-hosted/pull/new/teambox:develop...teambox:`f`"
  gh-commits = "!f() { git cur ; }; google-chrome https://github.com/teambox/Teambox-hosted/commits/`f`"
  rm = "!f() { git status | grep deleted | awk '{print $3}' | xargs git rm}; f"
  score='git log --numstat | awk -f /Users/saimon/bin/git_score.awk'
  history = "!f() { echo \"==============> ADDED\" >> HISTORY.md; git log --pretty=format:\"%ai %s [%an]\" >> HISTORY.md; }; f"
	unstage = reset HEAD
  update = "!f() { git remote update && git pull --rebase --recurse-submodules; }; f"

  first = "!git rev-list master |tail -n 1"
  last = "rev-parse HEAD"
  mod  = "!f() { git status | grep modified | awk '{print $3}' | head -n 5; }; f"
  # Pretty!
  # via http://andyjeffries.co.uk/articles/25-tips-for-intermediate-git-users
  lol = log --pretty=oneline --abbrev-commit --graph --decorate
  # Not yet added - doesn't include ignored files
  unstaged = ls-files --others --exclude-standard
  # Files that are in the staging area
  added = diff --cached --name-only
  today = log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative
  ff = merge --ff-only
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  sha = rev-parse HEAD
  latestb = for-each-ref --sort=-committerdate refs/heads/
  cichangelog = "!f() { git commit --allow-empty -m \"* $1\"; }; f"
  back = checkout @{-1}
  recent = !git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | grep -v develop | head -n 20
  fixup = "!f() { git commit --fixup=$1; git rebase -i --autosquash $1~1; }; f"
  down-on-it = rebase origin/develop
  wip = !git add --all . && git commit -m 'WIP'

  # Welcome to pam/fzf heaven
	pam= !git recent | fzf | xargs -o git checkout
	pamadd= !git status -s | awk '{ print $2 }' | fzf -m | xargs git add --all
	pamfix= !git log --pretty=oneline | head | fzf | awk '{ print $1 }' | xargs git fixup
	pamshow= !git log --pretty=oneline | head | fzf | awk '{ print $1 }' | xargs git show
	pamrebase= !git log --pretty=oneline | head | fzf | awk '{ print $1 }' | xargs -I {} git rebase -i {}^
	pamvim= !git status -s | awk '{ print $2 }' | fzf -m | xargs vim
  pamgrep= !vim $(git grep $1 | fzf -m | cut -d: -f1)

[help]
	autocorrect = 1

[branch]
	autosetupmerge = true
	autosetuprebase = always
[push]
	default = tracking
[github]
	user = saimonmoore
	token = adcb48646b6da528dfbd62a32af14ea0
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[credential]
	helper = osxkeychain
[rerere]
	enabled = true
[merge "gemfilelock"]
  name = relocks the gemfile.lock
  driver = bundle install
[rebase]
	autosquash = true
